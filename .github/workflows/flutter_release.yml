name: Flutter CI-CD

# trigger condition for the action
on:
  push:
    branches: [Dev]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Create Google Play Config file
        run: |
          cd android
          echo "$GOOGLE_API_JSON" > google_api.json.b64
          base64 -d -i google_api.json.b64 > google_api.json
        env:
          GOOGLE_API_JSON: ${{ secrets.GOOGLE_API_JSON }}
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: subosito/flutter-action@v1.4.0
        with:
          # The Flutter version to make available on the path
          flutter-version: "1.22.4" # optional
          # The Flutter build release channel
          #channel: # optional, default is stable #should be modified when deploying a web version
      #install dependecies :
      - name: Configure Keystore
        run: |
           pwd
           echo "$ANDROID_KEYSTORE_FILE" > upload_key.jks.b64
           base64 -d -i upload_key.jks.b64 > ./android/app/upload_key.jks
           echo "storeFile=upload_key.jks" >> ./android/key.properties
           echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> ./android/key.properties
           echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> ./android/key.properties
           echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> ./android/key.properties
           pwd
        env:
           ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
           KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
           KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
           KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - run: flutter pub get
      #run tests :
      - run: flutter test
#       - run: flutter build appbundle
      - run: flutter build apk

      - name: Push APK to Releases - save artifact
        uses: actions/upload-artifact@v2
        with:
          name: apk-artifact
          path: "./build/app/outputs/flutter-apk/app-release.apk"

#       - uses: actions/setup-ruby@v1
#         with:
#           ruby-version: "2.7"

#       - name: Install bundle
#         run: |
#           pwd
#           ls -R
#           bundle config path vendor/bundle
#           bundle install --jobs 4 --retry 3

#       - name: Distribute app to Alpha track ðŸš€
#         run: |
#           cd ./android
#           bundle exec fastlane alpha
